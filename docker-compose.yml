version: '3.8'

services:
  # База данных
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: interview_ai
      POSTGRES_USER: interview_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-interview_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U interview_user -d interview_ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Object Storage
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Orchestrator (FastAPI)
  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://interview_user:${DB_PASSWORD:-interview_pass}@db:5432/interview_ai
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - STT_SERVICE_URL=http://stt:8001
      - TTS_SERVICE_URL=http://tts:8002
      - SCORING_SERVICE_URL=http://scoring:8003
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Speech-to-Text Service
  stt:
    build:
      context: ./stt
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://interview_user:${DB_PASSWORD:-interview_pass}@db:5432/interview_ai
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Text-to-Speech Service
  tts:
    build:
      context: ./tts
      dockerfile: Dockerfile
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "8002:8002"
    depends_on:
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Scoring Service (LLM)
  scoring:
    build:
      context: ./scoring
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://interview_user:${DB_PASSWORD:-interview_pass}@db:5432/interview_ai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    ports:
      - "8003:8003"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Vue/React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - orchestrator
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  minio_data:
